cmake_minimum_required(VERSION 3.0.0)
project(testcmake VERSION 0.1.0)

include(CTest)
enable_testing()

file(GLOB_RECURSE SRC_FILES src/*.cpp)
include_directories(include)
link_directories(lib) 
if(CMAKE_COMPILER_IS_GNUCXX)
set(CMAKE_CXX_FLAGS "-std=c++20 -Wall")
set(CMAKE_CXX_FLAGS_DEBUG "-O0 -g -ggdb")
set(CMAKE_CXX_FLAGS_RELEASE "-O3")
endif(CMAKE_COMPILER_IS_GNUCXX)
if(MSVC)
set(CMAKE_CXX_FLAGS "/std:c++latest /utf-8 /W3 /EHsc /experimental:module")
set(CMAKE_CXX_FLAGS_DEBUG "/JMC /permissive- /GS /Zc:wchar_t /ZI /Gm- /Od /sdl /Zc:inline /fp:precise /D" _DEBUG" /D" _CONSOLE" /D" _UNICODE" /D" UNICODE" /errorReport:prompt /WX- /Zc:forScope /RTC1 /Gd /MDd /FC /nologo /diagnostics:column")
set(CMAKE_CXX_FLAGS_RELEASE "/permissive- /GS /GL /Gy /Zc:wchar_t /Zi /Gm- /O2 /sdl /Zc:inline /fp:precise /D" NDEBUG" /D" _CONSOLE" /D" _UNICODE" /D" UNICODE" /errorReport:prompt /WX- /Zc:forScope /Gd /Oi /MD /FC /nologo /diagnostics:column")
endif(MSVC)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${PROJECT_SOURCE_DIR}/debug) 
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${PROJECT_SOURCE_DIR}/release)
add_executable(main ${SRC_FILES})
set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)